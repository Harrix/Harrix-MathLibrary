        int ChromosomeLength=200;//Длина хромосомы
        int CountOfFitness=40*40;//Число вычислений целевой функции
        int TypeOfSel=1;//Тип селекции
        int TypeOfCros=0;//Тип скрещивания
        int TypeOfMutation=1;//Тип мутации
        int TypeOfForm=0;//Тип формирования нового поколения

        int *Parameters;
        Parameters=new int[6];
        Parameters[0]=ChromosomeLength;//Длина хромосомы
        Parameters[1]=CountOfFitness;//Число вычислений целевой функции
        Parameters[2]=TypeOfSel;//Тип селекции
        Parameters[3]=TypeOfCros;//Тип скрещивания
        Parameters[4]=TypeOfMutation;//Тип мутации
        Parameters[5]=TypeOfForm;//Тип формирования нового поколения

        int *Decision;//бинарное решение
        Decision=new int[ChromosomeLength];
        double ValueOfFitnessFunction;//значение функции пригодности в точке Decision
        int VHML_Success=0;//Успешен ли будет запуск cГА

        //Запуск алгоритма
        VHML_Success=HML_BinaryGeneticAlgorithmTwiceGenerations (Parameters,Func, Decision, &ValueOfFitnessFunction);

        //Используем полученный результат
        HML_ShowNumber(VHML_Success,"Как прошел запуск","VHML_Success");
        //Как прошел запуск:
        //VHML_Success=1

        if (VHML_Success==1)
        {
            HML_ShowVectorT(Decision,ChromosomeLength,"Найденное решение","Decision");
            //Найденное решение:
            //Decision =
            //1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1

            HML_ShowNumber(ValueOfFitnessFunction,"Значение функции пригодности","ValueOfFitnessFunction");
            // Значение функции пригодности:
            //ValueOfFitnessFunction=50
        }

        delete [] Parameters;
        delete [] Decision;