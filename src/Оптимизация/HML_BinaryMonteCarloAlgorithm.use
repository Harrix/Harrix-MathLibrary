        int LengthBinarString=50;//Длина хромосомы
        int CountOfFitness=50*50;//Число вычислений функции пригодности

        int *ParametersOfBinaryMonteCarloAlgorithm;
        ParametersOfBinaryMonteCarloAlgorithm=new int[2];
        ParametersOfBinaryMonteCarloAlgorithm[0]=LengthBinarString;//Длина хромосомы
        ParametersOfBinaryMonteCarloAlgorithm[1]=CountOfFitness;//Число вычислений целевой функции

        int *Decision;//бинарное решение
        Decision=new int[LengthBinarString];
        double ValueOfFitnessFunction;//значение функции пригодности в точке Decision
        int VHML_Success=0;//Успешен ли будет запуск cГА

        //Запуск алгоритма
        VHML_Success=HML_BinaryMonteCarloAlgorithm (ParametersOfBinaryMonteCarloAlgorithm,Func, Decision, &ValueOfFitnessFunction);

        //Используем полученный результат
        HML_ShowNumber(VHML_Success,"Как прошел запуск","VHML_Success");
        //Как прошел запуск:
        //VHML_Success=1

        if (VHML_Success==1)
         {
         HML_ShowVectorT(Decision,LengthBinarString,"Найденное решение","Decision");
         //Найденное решение:
         //Decision =
         //1	0	1	1	1	1	1	0	1	1	1	1	1	1	1	0	0	1	0	0	1	1	1	1	1	0	1	1	0	1	1	0	1	1	1	1	0	0	1	1	1	1	0	1	1	1	0	1	1	1

         HML_ShowNumber(ValueOfFitnessFunction,"Значение функции пригодности","ValueOfFitnessFunction");
         // Значение функции пригодности:
         //ValueOfFitnessFunction=37
         }
        delete [] ParametersOfBinaryMonteCarloAlgorithm;
        delete [] Decision;