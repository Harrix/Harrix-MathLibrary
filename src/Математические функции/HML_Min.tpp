template <class T> T HML_Min(T a, T b)
{
/*
Функция возвращает минимальный элемент из двух.
Входные параметры:
 a - первый элемент;
 b - первый элемент.
Возвращаемое значение:
 Минимальный элемент.
*/
if (a<b)
 return a;
else
 return b;
}
//---------------------------------------------------------------------------
template <class T> T HML_Min(T a, T b, T c)
{
/*
Функция возвращает минимальный элемент из трех.
Входные параметры:
 a - первый элемент;
 b - первый элемент;
 c - третий элемент.
Возвращаемое значение:
 Минимальный элемент.
*/
T min = HML_Min(HML_Min(a,b),c);

return min;
}
//---------------------------------------------------------------------------
template <class T> T HML_Min(T a, T b, T c, T d)
{
/*
Функция возвращает минимальный элемент из четырех.
Входные параметры:
 a - первый элемент;
 b - первый элемент;
 c - третий элемент
 и так далее.
Возвращаемое значение:
 Минимальный элемент.
*/
T min = HML_Min(HML_Min(a,b,c),d);

return min;
}
//---------------------------------------------------------------------------
template <class T> T HML_Min(T a, T b, T c, T d, T e)
{
/*
Функция возвращает минимальный элемент из пяти.
Входные параметры:
 a - первый элемент;
 b - первый элемент;
 c - третий элемент
 и так далее.
Возвращаемое значение:
 Минимальный элемент.
*/
T min = HML_Min(HML_Min(a,b,c,d),e);

return min;
}
//---------------------------------------------------------------------------
template <class T> T HML_Min(T a, T b, T c, T d, T e, T f)
{
/*
Функция возвращает минимальный элемент из шести.
Входные параметры:
 a - первый элемент;
 b - первый элемент;
 c - третий элемент
 и так далее.
Возвращаемое значение:
 Минимальный элемент.
*/
T min = HML_Min(HML_Min(a,b,c,d,e),f);

return min;
}
//---------------------------------------------------------------------------
template <class T> T HML_Min(T a, T b, T c, T d, T e, T f, T g)
{
/*
Функция возвращает минимальный элемент из семи.
Входные параметры:
 a - первый элемент;
 b - первый элемент;
 c - третий элемент
 и так далее.
Возвращаемое значение:
 Минимальный элемент.
*/
T min = HML_Min(HML_Min(a,b,c,d,e,f),g);

return min;
}
//---------------------------------------------------------------------------
template <class T> T HML_Min(T a, T b, T c, T d, T e, T f, T g, T h)
{
/*
Функция возвращает минимальный элемент из восьми.
Входные параметры:
 a - первый элемент;
 b - первый элемент;
 c - третий элемент
 и так далее.
Возвращаемое значение:
 Минимальный элемент.
*/
T min = HML_Min(HML_Min(a,b,c,d,e,f,g),h);

return min;
}
//---------------------------------------------------------------------------
template <class T> T HML_Min(T a, T b, T c, T d, T e, T f, T g, T h, T i)
{
/*
Функция возвращает минимальный элемент из девяти.
Входные параметры:
 a - первый элемент;
 b - первый элемент;
 c - третий элемент
 и так далее.
Возвращаемое значение:
 Минимальный элемент.
*/
T min = HML_Min(HML_Min(a,b,c,d,e,f,g,h),i);

return min;
}
//---------------------------------------------------------------------------
template <class T> T HML_Min(T a, T b, T c, T d, T e, T f, T g, T h, T i, T j)
{
/*
Функция возвращает минимальный элемент из десяти.
Входные параметры:
 a - первый элемент;
 b - первый элемент;
 c - третий элемент
 и так далее.
Возвращаемое значение:
 Минимальный элемент.
*/
T min = HML_Min(HML_Min(a,b,c,d,e,f,g,h,i),j);

return min;
}