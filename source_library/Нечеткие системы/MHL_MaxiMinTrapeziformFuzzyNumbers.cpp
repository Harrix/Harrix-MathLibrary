double MHL_MaxiMinTrapeziformFuzzyNumbers (double *Data)
{
/*
Функция находит максимальное значение функции принадлежности нечеткого числа,
образуемого минимизацией двух трапециевидных нечетких чисел. Необходимо для
нечеткого вывода.
Входные параметры:
 Data - данные о нечетких числах
 [0] - a1, левая крайняя граница первого нечеткого трапециевидного числа.
 [1] - b1, начало устойчивой области первого нечеткого трапециевидного числа.
 [2] - с1, конец устойчивой области первого нечеткого трапециевидного числа.
 [3] - d1, правая крайняя граница первого нечеткого трапециевидного числа.
 [4] - a2, левая крайняя граница второго нечеткого трапециевидного числа.
 [5] - b2, начало устойчивой области второго нечеткого трапециевидного числа.
 [6] - с2, конец устойчивой области второго нечеткого трапециевидного числа.
 [7] - d2, правая крайняя граница второго нечеткого трапециевидного числа.
Возвращаемое значение:
 Максимальное значение функции принадлежности нечеткого числа.
*/
    bool b;
    double x;
    double a1=Data[0];
    double b1=Data[1];
    double c1=Data[2];
    double d1=Data[3];
    double a2=Data[4];
    double b2=Data[5];
    double c2=Data[6];
    double d2=Data[7];

    //пересекаются ли отрезки [b1,c1] и [b2,c2]
    b=TMHL_BoolCrossingTwoSegment(b1,c1,b2,c2);

    if (b==true) return 1;
    if (b1>c2)
    {
        //меняем трапециевидные числа местами
        TMHL_NumberInterchange(&a1,&a2);
        TMHL_NumberInterchange(&b1,&b2);
        TMHL_NumberInterchange(&c1,&c2);
        TMHL_NumberInterchange(&d1,&d2);
    }

    //пересекаются ли отрезки
    b=TMHL_BoolCrossingTwoSegment(c1,d1,a2,b2);
    if (b==false) return 0;
    x=(a2*c1-d1*b2)/(a2-b2+c1-d1);
    return ((d1-x)/(d1-c1));
}