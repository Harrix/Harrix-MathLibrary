template <class T> void TMHL_RandomArrangingObjectsIntoBaskets(T *VMHL_ResultVector, int N, int VMHL_N)
{
/*
Функция предлагает случайный способ расставить N объектов в VMHL_N корзин при условии, что
в каждой корзине может располагаться только один предмет.
Входные параметры:
 VMHL_ResultVector - массив, в который записывается результат;
 N - число предметов;
 VMHL_N - размер массива (и число корзин).
Возвращаемое значение:
 Отсутствует.
Примечание:
 В VMHL_ResultVector 0 удет означать отсутствие предмета, 1 - наличие.
*/
if (N<0) N=0;// должен быть хотя бы один предмет
if (N>VMHL_N) N=VMHL_N;

int j;//Счетчик
int p;//Текущее число свободнных участников
int r;//случайное число для определения победителя
int g=0;//Номер выбранного участника

TMHL_ZeroVector(VMHL_ResultVector,VMHL_N);// Пока никого

if (N>0)
 {//Если есть хотя бы один предмет
 r=MHL_RandomUniformInt(0,VMHL_N);
 VMHL_ResultVector[r]=1;//отметили первую корзину

 for (int i=1;i<N;i++)
  {//выбор еще одной корзины
  r=MHL_RandomUniformInt(0,VMHL_N-i);//на один меньше можно выбрать, чем в предыдущий раз
  p=0;//Текущее число свободных корзин
  j=0;//Счетчик

  while (p!=r+1)
   {
   //Ищем нашу корзину
   if (VMHL_ResultVector[j]==0)
    {
    //Нашли свободную корзину. Возможно это наша.
    p++;
    g=j;
    }
   j++;
   }

  //Теперь g - номер нашей корзины
  VMHL_ResultVector[g]=1;//Поместим предмет
  }//выбор еще одной корзины
 }//Если есть хотя бы один предмет
}